# 数值运算操作符:
'''
# | 操作符  | 功能             | 示例               | 结果    |

# 二元运算符
# |-------|----------------|------------------|--------|
# | `+`   | 加法             | `3 + 5`          | `8`    |
# | `-`   | 减法             | `10 - 2`         | `8`    |
# | `*`   | 乘法             | `4 * 7`          | `28`   |
# | `/`   | 除法             | `10 / 2`         | `5.0`  |
# | `//`  | 取整除（地板除）  | `10 // 3`        | `3`    |
# | `%`   | 取余数（模运算）  | `10 % 3`         | `1`    |
# | `**`  | 幂运算           | `2 ** 3`         | `8`    |

# 一元运算符
# | `-`   | 负号（取负）      | `-5`             | `-5`   |
# | `+`   | 正号（取正）      | `+5`             | `5`    |
'''


# 数值运算函数:
'''
以下是更新后的数值运算函数表格，其中包含了 `pow(x, y, z)` 的说明：

| 函数                | 功能                                          | 示例                        | 结果       |
|---------------------|-----------------------------------------------|-----------------------------|------------|
| `abs(x)`            | 返回数值的绝对值                              | `abs(-5)`                   | `5`        |
| `round(x, n)`       | 将数值四舍五入到指定的小数位数                | `round(3.14159, 2)`         | `3.14`     |
| `max(iterable)`     | 返回可迭代对象中的最大值                      | `max(1, 5, 3)`              | `5`        |
| `min(iterable)`     | 返回可迭代对象中的最小值                      | `min(1, 5, 3)`              | `1`        |
| `sum(iterable)`     | 计算可迭代对象中所有元素的和                  | `sum([1, 2, 3, 4])`         | `10`       |
| `pow(x, y)`         | 计算 `x` 的 `y` 次幂                           | `pow(2, 3)`                 | `8`        |
| `pow(x, y, z)`      | 计算 `(x ** y) % z`                           | `pow(2, 3, 5)`              | `3`        |
| `divmod(x, y)`      | 返回 `(x // y, x % y)` 的元组                 | `divmod(10, 3)`             | `(3, 1)`   |
| `int(x)`            | 将数值或字符串转换为整数                      | `int(3.14)`                 | `3`        |
| `float(x)`          | 将数值或字符串转换为浮点数                    | `float(3)`                  | `3.0`      |
| `complex(x, y)`     | 创建复数                                      | `complex(2, 3)`             | `(2+3j)`   |
| `sqrt(x)`           | 计算 `x` 的平方根（需 `import math`）         | `math.sqrt(16)`             | `4.0`      |
| `ceil(x)`           | 返回大于或等于 `x` 的最小整数（向上取整）      | `math.ceil(3.14)`           | `4`        |
| `floor(x)`          | 返回小于或等于 `x` 的最大整数（向下取整）      | `math.floor(3.14)`          | `3`        |
| `exp(x)`            | 计算 `e` 的 `x` 次幂（需 `import math`）       | `math.exp(1)`               | `2.718281828459045` |
| `log(x, base)`      | 计算 `x` 的对数，`base` 为底数（需 `import math`） | `math.log(8, 2)`       | `3.0`      |
| `sin(x)`            | 计算 `x`（弧度） 的正弦值（需 `import math`） | `math.sin(math.pi/2)` | `1.0`      |
| `cos(x)`            | 计算 `x`（弧度） 的余弦值（需 `import math`） | `math.cos(0)`         | `1.0`      |
| `tan(x)`            | 计算 `x`（弧度） 的正切值（需 `import math`） | `math.tan(math.pi/4)` | `1.0`      |

这个表格总结了 Python 中常用的数值运算函数及其功能和示例。
'''

# 数值比较运算符:
'''
以下是 Python 中常用的数值比较运算符的表格：

| 运算符  | 功能                   | 示例               | 结果       |
|---------|------------------------|--------------------|------------|
| `==`    | 判断两个值是否相等        | `5 == 5`           | `True`     |
| `!=`    | 判断两个值是否不相等      | `5 != 3`           | `True`     |
| `>`     | 判断左侧值是否大于右侧值  | `5 > 3`            | `True`     |
| `<`     | 判断左侧值是否小于右侧值  | `5 < 3`            | `False`    |
| `>=`    | 判断左侧值是否大于或等于右侧值 | `5 >= 5`    | `True`     |
| `<=`    | 判断左侧值是否小于或等于右侧值 | `5 <= 3`    | `False`    |

这些运算符通常用于条件判断或循环控制中，用来比较两个数值或变量的大小关系。
'''

# 逻辑运算:
'''
| 运算符  | 功能                              | 示例                     | 结果         |
|---------|-----------------------------------|--------------------------|--------------|
| `and`   | 逻辑与，所有条件为真时返回 True     | `True and False`         | `False`      |
| `or`    | 逻辑或，只要有一个条件为真就返回 True | `True or False`          | `True`       |
| `not`   | 逻辑非，将 True 变为 False，反之亦然 | `not True`               | `False`      |
'''
