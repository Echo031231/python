### 1. 网络爬虫
'''
| 库名      | 功能                                   | 主要用法                                               | 应用场景                            |
|-----------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `requires`| 简化HTTP请求和响应处理                  | 发起HTTP请求，处理响应，支持简单的网络数据抓取          | 简单爬虫，HTTP接口交互               |
| `scrapy`  | 高效的网页抓取框架                      | 定义爬虫类，设置抓取规则，使用`scrapy crawl`命令运行    | 大规模数据采集，网站抓取             |
'''
### 2. 数据分析
'''
| 库名      | 功能                                   | 主要用法                                               | 应用场景                            |
|-----------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `numpy`   | 数组和矩阵运算                         | 创建和操作多维数组，执行数学函数，如`mean()`和`dot()`   | 数学计算，科学研究                   |
| `scipy`   | 科学计算扩展库                         | 数值积分、优化问题、信号处理等                           | 科学计算，工程分析                   |
| `pandas`  | 数据结构和分析工具                     | 读取和处理数据，数据清洗和分析，导出结果                | 数据分析，数据清洗，数据处理         |
'''
### 3. 文本处理
'''
| 库名             | 功能                                   | 主要用法                                               | 应用场景                            |
|------------------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `openpyxl`       | 处理Excel `.xlsx` 文件                  | 读取、写入Excel文件，操作单元格和格式                  | 数据存储，Excel报表生成              |
| `python-docx`    | 处理Word `.docx` 文件                   | 创建和修改Word文档，添加段落、表格和格式                | 文档处理，报告生成                   |
| `beautifulsoup4` | 解析HTML和XML文档                      | 解析网页，提取和处理HTML标签和内容                      | 网页抓取，数据提取                   |
'''
### 4. 用户图形界面
'''
| 库名       | 功能                                   | 主要用法                                               | 应用场景                            |
|------------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `PyQt5`    | 跨平台GUI开发框架                      | 创建窗口和控件，处理事件，使用信号和槽机制              | 桌面应用程序，工具软件开发           |
| `wxPython` | 原生跨平台GUI组件                     | 创建窗口和控件，管理布局，处理事件                     | 桌面应用程序，跨平台开发             |
| `PyGTK`    | GTK+图形用户界面开发                   | 创建窗口和控件，管理界面布局，处理事件                  | Linux应用程序开发，桌面应用程序     |
'''
### 5. 机器学习
'''
| 库名            | 功能                                   | 主要用法                                               | 应用场景                            |
|-----------------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `scikit_learn`  | 机器学习算法和工具                     | 训练和评估分类、回归和聚类模型，使用内置算法和工具      | 预测分析，数据挖掘                   |
| `TensorFlow`    | 深度学习框架                           | 构建和训练深度学习模型，支持GPU加速，处理大规模数据      | 神经网络训练，机器学习模型开发       |
| `Theano`        | 符号数学计算                           | 定义计算图，进行数学计算和优化                           | 深度学习研究，复杂数学计算           |
'''
### 6. Web开发
'''
| 库名      | 功能                                   | 主要用法                                               | 应用场景                            |
|-----------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `Django`  | 高级Web框架                           | 创建项目和应用，定义模型和视图，使用ORM处理数据库       | 企业级Web应用开发，快速原型开发     |
| `Pyramid` | 灵活的Web框架                         | 定义路由和视图，配置应用，支持多种数据库和模板引擎       | 大型Web应用开发，复杂系统            |
| `Flask`   | 轻量级Web框架                         | 定义路由和视图，使用Jinja2模板，处理请求和响应           | 小型Web应用，API开发                 |
'''
### 7. 游戏开发
'''
| 库名      | 功能                                   | 主要用法                                               | 应用场景                            |
|-----------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `Pygame`  | 2D游戏开发库                         | 创建游戏窗口，处理用户输入，绘制图形，播放声音          | 2D游戏开发，教育和娱乐项目          |
| `Panda3D` | 3D游戏引擎                            | 创建3D场景，渲染图形，处理物理和碰撞检测                | 3D游戏开发，虚拟现实应用            |
| `cocos2d`| 2D游戏框架                            | 创建游戏场景和对象，处理动画和物理，支持多平台         | 2D游戏开发，图形演示                 |
'''
### 8. 数据可视化
'''
| 库名       | 功能                                   | 主要用法                                               | 应用场景                            |
|------------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `matplotlib`| 2D图表绘制                            | 创建各种类型的图表，进行数据可视化，定制图表样式        | 数据分析，科学研究，报告生成         |
| `TVTK`     | 3D数据可视化                          | 创建和管理3D图形，渲染科学数据                        | 科学数据可视化，工程应用            |
| `mayavi`   | 3D科学数据可视化                      | 创建和展示3D图形，处理和可视化复杂数据                  | 科学计算，工程数据可视化             |
'''
### 9. 更多第三方库
'''
| 库名      | 功能                                   | 主要用法                                               | 应用场景                            |
|-----------|----------------------------------------|--------------------------------------------------------|-------------------------------------|
| `PIL` (Pillow) | 图像处理库                           | 处理和转换图像，支持多种格式，图像操作和处理           | 图像处理，图像编辑                   |
| `SymPy`   | 符号数学计算                          | 进行代数运算，微积分计算，符号求解                     | 数学研究，教学                       |
| `NLTK`    | 自然语言处理工具包                    | 分词、标注、解析文本，进行语言分析和处理               | 语言处理，文本分析                   |
| `WeoBot`  | 聊天机器人框架                        | 定义对话规则，处理聊天消息，构建和训练聊天机器人        | 聊天机器人，自动化工具              |
| `MYQR`    | QR码生成工具                          | 生成自定义QR码，支持颜色和背景图案                    | QR码生成，二维码应用                |
'''


